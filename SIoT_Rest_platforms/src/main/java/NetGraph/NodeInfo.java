/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NetGraph;

import Servers.RelBrowser;
import Entities.ClientInterface;
import Servers.RMIInterface;
import Settings.Setup;
import Systems.GridsSystems;
import Systems.RMIRootInterface;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.accessibility.AccessibleContext;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.event.EventListenerList;
import javax.swing.plaf.ComponentUI;
import org.graphstream.graph.Graph;

/**
 *
 * @author Salvo
 */
public class NodeInfo extends javax.swing.JPanel {
   private static RMIRootInterface root_look_up;
   private static RMIInterface look_up;
   
   List<ClientInterface> ListaClient;
     Graph graph ;
    /**
     * Creates new form NodeInfo
     */
    public NodeInfo( List<ClientInterface> ListaClient,   Graph graph ) throws NotBoundException, MalformedURLException, RemoteException {
         this.root_look_up = (RMIRootInterface) Naming.lookup("//"+Setup.GATEWAY+"/root");
        initComponents();
       
        this.ListaClient =  ListaClient;
        this.graph =   graph;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ID = new javax.swing.JLabel();
        meta = new javax.swing.JLabel();
        areas = new javax.swing.JLabel();
        id_to_find = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        friends = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        resAddress = new javax.swing.JLabel();
        Server = new javax.swing.JLabel();

        ID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ID.setText("ID");

        meta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        meta.setText("meta");

        areas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        areas.setText("areas");

        id_to_find.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        id_to_find.setToolTipText("Id to find");
        id_to_find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_to_findActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("META:");

        jScrollPane1.setViewportView(friends);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Friends");

        resAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        resAddress.setText("...");

        Server.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Server.setText("Server");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(id_to_find, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(meta))
                            .addComponent(areas)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(ID)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(resAddress)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(158, 158, 158))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Server)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID)
                            .addComponent(jLabel1))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(meta)
                            .addComponent(jLabel2))
                        .addGap(33, 33, 33)
                        .addComponent(areas)))
                .addGap(18, 18, 18)
                .addComponent(Server)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_to_find, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search)
                    .addComponent(resAddress))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void id_to_findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_to_findActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_to_findActionPerformed

    
    
    
    
    
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
      try {                                       
          HashMap<String,String> ServerList = new  HashMap<String,String>();
          root_look_up = (RMIRootInterface) Naming.lookup("//"+Setup.GATEWAY+"/root");
          ServerList = root_look_up.getAddressServerList();
          
          try {
              ClientInterface client = null;
              for(ClientInterface c: this.ListaClient){
                  
                  if(c.getUID().equals(this.ID.getText())){
                      
                      client = c;
                      break;}
              }
              System.out.println("----------------------->"+"//"+ServerList.get(""+client.getServer())+"/server"+client.getServer());
              NodeInfo.look_up = (RMIInterface) Naming.lookup("//"+ServerList.get(""+client.getServer())+"/server"+client.getServer());
              String address=NodeInfo.look_up.getRelBrowser().search_entity(
                      client,
                      this.id_to_find.getText(),
                      this.meta.getText(),
                      Float.parseFloat("1"), //intra server latency
                      Float.parseFloat("10") //inter server latancy
              );
              
              if(address!=null){
                  this.resAddress.setText(address);}
              else
                  this.resAddress.setText("Entity not found!");
              
              
              
              
              
              
              
              
              /*g_nav.search_entity(client,
              this.id_to_find.getText(),
              this.meta.getText(),
              Float.parseFloat("1"), //intra server latency
              1,
              1,
              Float.parseFloat("15"), //inter server latancy
              this.GRIDS_SYSTEMS.getServerList());
              */
          } catch (NotBoundException ex) {
              Logger.getLogger(NodeInfo.class.getName()).log(Level.SEVERE, null, ex);
          } catch (MalformedURLException ex) {
              Logger.getLogger(NodeInfo.class.getName()).log(Level.SEVERE, null, ex);
          } catch (RemoteException ex) {
              Logger.getLogger(NodeInfo.class.getName()).log(Level.SEVERE, null, ex);
          }
      } catch (NotBoundException ex) {
          Logger.getLogger(NodeInfo.class.getName()).log(Level.SEVERE, null, ex);
      } catch (MalformedURLException ex) {
          Logger.getLogger(NodeInfo.class.getName()).log(Level.SEVERE, null, ex);
      } catch (RemoteException ex) {
          Logger.getLogger(NodeInfo.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_searchActionPerformed

    public JLabel getServer() {
        return Server;
    }

    public void setServer(JLabel Server) {
        this.Server = Server;
    }

   
    public JLabel getID() {
        return ID;
    }

    public void setID(JLabel ID) {
        this.ID = ID;
    }

    public JLabel getAreas() {
        return areas;
    }

    public void setAreas(JLabel building) {
        this.areas = building;
    }

    public JList<String> getFriends() {
        return friends;
    }

    public void setFriends(JList<String> friends) {
        this.friends = friends;
    }

   

    public JLabel getMeta() {
        return meta;
    }

    public void setMeta(JLabel meta) {
        this.meta = meta;
    }

    
    public ComponentUI getUi() {
        return ui;
    }

    public void setUi(ComponentUI ui) {
        this.ui = ui;
    }

    public EventListenerList getListenerList() {
        return listenerList;
    }

    public void setListenerList(EventListenerList listenerList) {
        this.listenerList = listenerList;
    }

    public AccessibleContext getAccessibleContext() {
        return accessibleContext;
    }

    public void setAccessibleContext(AccessibleContext accessibleContext) {
        this.accessibleContext = accessibleContext;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ID;
    private javax.swing.JLabel Server;
    private javax.swing.JLabel areas;
    private javax.swing.JList<String> friends;
    private javax.swing.JTextField id_to_find;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel meta;
    private javax.swing.JLabel resAddress;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}
